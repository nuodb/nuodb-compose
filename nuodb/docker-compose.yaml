version: '3'
services:
  nuoadmin1:
    image: $NUODB_IMAGE

    # Do NOT remove this env_file value!!
    env_file: .env

    environment:
      NUODB_DOMAIN_ENTRYPOINT: $PEER_ADDRESS
    hostname: $PEER_ADDRESS
    ports:
      - 48004-48005:48004-48005
      - 8888:8888
    command:
    - "nuoadmin"
    - "--"
    - "pendingProcessTimeout=${STARTUP_TIMEOUT:-60}000"
    - "pendingReconnectTimeout=90000"
    - "thrift.message.max=1073741824"
    - "processLivenessCheckSec=30"

  sm:
    image: $NUODB_IMAGE
    environment:
      # push the current resolved value of the VAR
      NUOCMD_API_SERVER:
      ARCHIVE_DIR: ${ARCHIVE_PATH:-/var/opt/nuodb/archive}
      DB_OPTIONS: "mem ${ENGINE_MEM:-1Gi} execution-engine ${SQL_ENGINE:-vee} ${ENGINE_OPTIONS:-}"
    hostname: sm1
    depends_on:
      - nuoadmin1
    volumes:
      - ${IMPORT_SOURCE:-./.env}:${IMPORT_PATH:-/var/tmp/env}

    ## NOTE: use '$$' for any variable that is to be evaluated at runtime IN THE SHELL.
    # Any variable with a single '$' is resolved by docker-compose and written literally into the command string.
    command:
      - "sh"
      - "-c"
      - |
        echo "ARCHIVE_DIR=$$ARCHIVE_DIR"
        if [ -n "$IMPORT_SOURCE" -a -f "$IMPORT_PATH" -a ! -f $$ARCHIVE_DIR/1.atm ]; then
           echo "Importing from $IMPORT_PATH into $$ARCHIVE_DIR..."
           tar xf $IMPORT_PATH --strip-components ${IMPORT_LEVEL:-1} -C $$ARCHIVE_DIR || exit 98
           find $$ARCHIVE_DIR -name '1.*'
           nuodocker restore archive --origin-dir $$ARCHIVE_DIR --restore-dir $$ARCHIVE_DIR --db-name $DB_NAME --clean-metadata || exit 99
        fi
        nuodocker start sm --db-name "$DB_NAME" --server-id "$PEER_ADDRESS" --dba-user "$DB_USER" --dba-password "$DB_PASSWORD" --options "alt-address sm1" --database-options "$$DB_OPTIONS"

  te1:
    image: $NUODB_IMAGE
    environment:
      # push the current resolved value of the VAR
      NUOCMD_API_SERVER:
      STARTUP_TIMEOUT: ${STARTUP_TIMEOUT:-90}
    hostname: te1
    depends_on:
      - nuoadmin1
      - sm
    ports:
      - 48006:48006

    ## NOTE: use '$$' for any variable that is to be evaluated at runtime IN THE SHELL.
    # Any variable with a single '$' is resolved by docker-compose and written literally into the command string.
    command:
      - "sh"
      - "-c"
      - |
        sleepTime=0
        sleepQuantum=30
        while [ -z "$$(nuocmd get database --db-name $DB_NAME)" -o $$? -ne 0 ] ; do
          if [ $$sleepTime -ge $$STARTUP_TIMEOUT ]; then
            echo "Timed out waiting for database startup ($$sleepTime sec)..."
            exit 97
          fi
          echo "Waiting for confirmation that database $DB_NAME exists..."
          sleep $$sleepQuantum
          sleepTime=$$(( sleepTime + sleepQuantum ))
          [ $$sleepQuantum -lt $$((STARTUP_TIMEOUT / 2)) ] && sleepQuantum=$$(( sleepQuantum + 30 ))
        done
        nuodocker start te --db-name "$DB_NAME" --server-id "$PEER_ADDRESS" --options "alt-address ${EXTERNAL_ADDRESS:-te1}"

  # te2:
  #   image: $NUODB_IMAGE
  #   environment:
  #     # push the current resolved value of the VAR
  #     NUOCMD_API_SERVER:
  #   hostname: te2
  #   scale: 0
  #   depends_on:
  #     - nuoadmin1
  #     - sm
  #   ports:
  #     - 48007:48006
  #   command: [ "nuodocker", "start", "te", "--db-name", "$DB_NAME", "--server-id", "$PEER_ADDRESS", "--options", "alt-address ${EXTERNAL_ADDRESS:-te2}" ]

  influxdb:
    image: influxdb:1.8
    # ports:
      # The API for InfluxDB is served on port 8086
      # - "8086:8086"
      # - "8082:8082"
    volumes:
      - ./conf/initdb.sh:/docker-entrypoint-initdb.d/initdb.sh

  nuocd-sm:
    image: nuodb/nuodb-collector:latest
    depends_on:
      - nuoadmin1
      - sm
      - influxdb
    environment:
      INFLUXURL: http://influxdb:8086
      NUOCD_HOSTNAME: sm1
    pid: 'service:sm'

  nuocd-te1:
    image: nuodb/nuodb-collector:latest
    depends_on:
      - nuoadmin1
      - te1
      - influxdb
    environment:
      INFLUXURL: http://influxdb:8086
      NUOCD_HOSTNAME: te1
    pid: 'service:te1'

  # nuocd-te2:
  #   image: nuodb/nuodb-collector:latest
  #   depends_on:
  #     - nuoadmin1
  #     - te2
  #     - influxdb
  #   environment:
  #     INFLUXURL: http://influxdb:8086
  #     NUOCMD_API_SERVER:
  #     NUOCD_HOSTNAME: te2
  #   pid: 'service:te2'
    
  grafana:
    image: grafana/grafana:7.5.4
    depends_on:
      - influxdb
    environment:
      INFLUX_HOST: influxdb
    volumes:
      - ./provisioning:/etc/grafana/provisioning
    ports:
      - "3000:3000"

  # ycsb-demo:
  #   image: nuodb/ycsb:latest
  #   depends_on:
  #     - te1
  #   environment:
  #     PEER_ADDRESS:
  #     DB_NAME:
  #     DB_USER:
  #     DB_PASSWORD:
  #   command: ["/driver/startup.sh"]
